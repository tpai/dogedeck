{"version":3,"sources":["assets/github.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","type","setType","handleTypeChange","useCallback","e","target","value","search","setSearch","handleSearchChange","displayCards","cards","reverse","filter","card","title","includes","map","className","alt","src","encodeURIComponent","onChange","id","name","placeholder","href","rel","githubSVG","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAAe,MAA0B,mC,OCkF1BA,MA9Ef,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,KAEPC,EAAmBC,uBAAY,SAACC,GACpCH,EAAQG,EAAEC,OAAOC,SAChB,IAJU,EAMeP,mBAAS,IANxB,mBAMNQ,EANM,KAMEC,EANF,KAOPC,EAAqBN,uBAAY,SAACC,GACtCI,EAAUJ,EAAEC,OAAOC,SAClB,IACGI,EAAeC,EAClBC,UACAC,QACC,SAACC,GAAD,OACEA,EAAKC,MAAMC,SAAST,KAAYO,EAAKd,OAASA,GAAiB,KAATA,MAEzDiB,KAAI,SAACH,GAAD,OACH,qBAEEI,UAAU,gEACVC,IAAKL,EAAKC,MACVK,IAAKN,EAAKM,KAHLC,mBAAmBP,EAAKC,WAMnC,OACE,0BAASG,UAAU,sCAAnB,UACE,yBAAQA,UAAU,WAAlB,UACE,yBACEI,SAAUpB,EACVgB,UAAU,kHAFZ,UAIE,wBAAQZ,MAAM,GAAGY,UAAU,cAA3B,0BAGA,wBAAQZ,MAAM,OAAOY,UAAU,cAA/B,gCAGA,wBAAQZ,MAAM,QAAQY,UAAU,cAAhC,gCAGA,wBAAQZ,MAAM,UAAUY,UAAU,cAAlC,mCAIF,uBACElB,KAAK,OACLuB,GAAG,SACHC,KAAK,SACLC,YAAY,eACZP,UAAU,kQACVI,SAAUb,IAEZ,mBACES,UAAU,sDACVQ,KAAK,mCACLrB,OAAO,SACPsB,IAAI,aAJN,SAME,qBACEP,IAAKQ,EACLT,IAAI,SACJD,UAAU,2DAIfR,EAAamB,OAAS,EACrB,qBAAKX,UAAU,2DAAf,SACGR,IAGH,qBAAKQ,UAAU,6BAAf,gGC9DOY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f642a2fd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/github.4ccd8fa9.svg\";","import { useCallback, useState } from \"react\";\nimport cards from \"./cards.json\";\nimport githubSVG from \"./assets/github.svg\";\n\nfunction App() {\n  const [type, setType] = useState(\"\");\n  const handleTypeChange = useCallback((e) => {\n    setType(e.target.value);\n  }, []);\n\n  const [search, setSearch] = useState(\"\");\n  const handleSearchChange = useCallback((e) => {\n    setSearch(e.target.value);\n  }, []);\n  const displayCards = cards\n    .reverse()\n    .filter(\n      (card) =>\n        card.title.includes(search) && (card.type === type || type === \"\")\n    )\n    .map((card) => (\n      <img\n        key={encodeURIComponent(card.title)}\n        className=\"object-cover object-center w-1/2 rounded-lg sm:w-1/3 lg:w-1/6\"\n        alt={card.title}\n        src={card.src}\n      />\n    ));\n  return (\n    <section className=\"text-gray-400 bg-gray-900 body-font\">\n      <header className=\"flex p-3\">\n        <select\n          onChange={handleTypeChange}\n          className=\"w-2/6 py-2 pl-3 text-white bg-transparent border border-gray-700 rounded appearance-none cursor-pointer sm:w-24\"\n        >\n          <option value=\"\" className=\"bg-gray-900\">\n            全部\n          </option>\n          <option value=\"trap\" className=\"bg-gray-900\">\n            陷阱卡\n          </option>\n          <option value=\"magic\" className=\"bg-gray-900\">\n            魔法卡\n          </option>\n          <option value=\"monster\" className=\"bg-gray-900\">\n            怪獸卡\n          </option>\n        </select>\n        <input\n          type=\"text\"\n          id=\"search\"\n          name=\"search\"\n          placeholder=\"搜尋\"\n          className=\"w-3/6 px-3 py-1 ml-3 text-base text-gray-100 bg-gray-600 border border-gray-600 rounded outline-none sm:w-80 bg-opacity-20 focus:bg-transparent focus:ring-2 focus:ring-indigo-900 focus:border-indigo-500 leading-8 transition-colors duration-200 ease-in-out\"\n          onChange={handleSearchChange}\n        />\n        <a\n          className=\"flex items-center justify-center w-1/6 ml-3 sm:w-12\"\n          href=\"https://github.com/tpai/dogedeck\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <img\n            src={githubSVG}\n            alt=\"github\"\n            className=\"w-10 h-10 p-2 text-white bg-gray-800 rounded-full\"\n          />\n        </a>\n      </header>\n      {displayCards.length > 0 ? (\n        <div className=\"flex flex-wrap mx-auto overflow-y-scroll cards-container\">\n          {displayCards}\n        </div>\n      ) : (\n        <div className=\"w-full text-xl text-center\">\n          找不到你想要的色色柴犬🥲\n        </div>\n      )}\n    </section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}